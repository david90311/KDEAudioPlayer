//
//  PlayerEventProducer.swift
//  AudioPlayer
//
//  Created by Kevin DELANNOY on 08/03/16.
//  Copyright Â© 2016 Kevin Delannoy. All rights reserved.
//

import AVFoundation

/**
 *  A `PlayerEventProducer` listens to notifications and observes events generated by an AVPlayer.
 */
class PlayerEventProducer: NSObject, EventProducer {
    /**
       A `PlayerEvent` is an event an player generates over time.

       - StartedBuffering: The player started buffering the audio file.
       - ReadyToPlay:      The player is ready to play. It buffered enough data.
       - LoadedMoreRange:  The player loaded more range of time.
       - LoadedMetadata:   The player loaded metadata.
       - LoadedDuration:   The player has found audio item duration.
       - EndedPlaying:     The player ended playing the current item because it went through the
            file or because of an error.
     */
    enum PlayerEvent: Event {
        case StartedBuffering
        case ReadyToPlay
        case LoadedMoreRange(CMTime, CMTime)
        case LoadedMetadata([AVMetadataItem])
        case LoadedDuration(NSTimeInterval)
        case EndedPlaying(NSError?)
    }

    /// The player to produce events with.
    /// Note that setting it has the same result as calling `stopProducingEvents`.
    var player: AVPlayer? {
        willSet {
            stopProducingEvents()
        }
    }

    /// The listener that will be alerted a new event occured.
    weak var eventListener: EventListener?

    /// A boolean value indicating whether we're currently listening to events on the player.
    private var listening = false

    /**
     Starts listening to the player events.
     */
    func startProducingEvents() {
        guard !listening else {
            return
        }

        listening = true
    }

    /**
     Stops listening to the player events.
     */
    func stopProducingEvents() {
        guard listening else {
            return
        }

        listening = false
    }
}
